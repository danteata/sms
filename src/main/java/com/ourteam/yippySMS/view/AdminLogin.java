/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AdminLogin.java
 *
 */

package com.ourteam.yippySMS.view;

/**
 *
 * @author dantheta
 */

import com.ourteam.yippySMS.model.Administrator;
import com.ourteam.yippySMS.model.School;
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import java.awt.event.*;
import javax.persistence.Query;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;


public class AdminLogin extends javax.swing.JDialog implements RootPaneContainer {
	

	
    public void createDesiredBorder(JButton jbtn){
        jbtn.setBorder(javax.swing.BorderFactory.createCompoundBorder(
                javax.swing.BorderFactory.createCompoundBorder(
                javax.swing.BorderFactory.createBevelBorder(
                javax.swing.border.BevelBorder.RAISED),
                javax.swing.BorderFactory.createCompoundBorder(
                javax.swing.BorderFactory.createMatteBorder(
                2, 2, 2, 2, new java.awt.Color(0, 0, 0)),
                javax.swing.BorderFactory.createBevelBorder(
                javax.swing.border.BevelBorder.RAISED))),
                javax.swing.BorderFactory.createBevelBorder(
                javax.swing.border.BevelBorder.RAISED)));
    }    
   private static Connection getConnection()
    {
        Connection con = null;
        try
        {
           Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/SMS";
            String user = "root";
            String pw = "";
            con = DriverManager.getConnection(url, user, pw);
        }
        catch (ClassNotFoundException e)
        {
            System.out.println("Unable to locate class");
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null," Database not connected");
           // System.exit(0);
        }
        catch (SQLException e)
        {
            System.out.println(e.getMessage());
             JOptionPane.showMessageDialog(null," Database not connected");
           // System.exit(0);
        }
        return con;
    }

    /** Creates new form AdminLogin */
    public AdminLogin(JFrame frame,String str) {
        //initComponents();
         addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent e)
            {
                buttonCancel.doClick();
            }
        } );
        initComponents();
        //createUniformBorders();
       // this.setSize(900,500);
        this.setLocationRelativeTo(null);
      //  this.cat=name;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        usernameTextBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        passwordTextBox = new javax.swing.JPasswordField();
        buttonLogin = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        loginBannerLabel = new javax.swing.JLabel();
        loginIconLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SCHOOL MANAGEMENT SYSTEM");
        setAlwaysOnTop(true);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        usernameTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextBoxActionPerformed(evt);
            }
        });
        usernameTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameTextBoxKeyPressed(evt);
            }
        });

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        passwordTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextBoxKeyPressed(evt);
            }
        });

        buttonLogin.setText("Login");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(usernameTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogin)
                    .addComponent(backButton)
                    .addComponent(buttonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loginBannerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login.png"))); // NOI18N

        loginIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminControl2.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginBannerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginIconLabel)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(loginIconLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginBannerLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(182, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(86, 86, 86)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(20, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_usernameTextBoxActionPerformed

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed
        boolean verify = false;
        String userName = usernameTextBox.getText();
        String passwd = passwordTextBox.getText();
        if (userName.equals("") && passwd.equals("")){
            JOptionPane.showMessageDialog(AdminLogin.this,"Sorry! You must enter a Username and Password to login ");
            usernameTextBox.requestFocus();
        }
        else if(passwd.equals(""))
         {
            JOptionPane.showMessageDialog(AdminLogin.this,"Sorry! You must enter a Password to login ");
            usernameTextBox.requestFocus();
         }
         else if (userName.equals("")){
            JOptionPane.showMessageDialog(AdminLogin.this,"Sorry! You must enter a Username to login ");
            usernameTextBox.requestFocus();
        }
        else{
		 System.out.println("check: admin login success");
Query query = null;
//		EntityManagerFactory emf = Persistence.createEntityManagerFactory("smsPU");
//		EntityManager em = emf.createEntityManager();
		
		query = School.manager.createQuery("select a from Administrator a where a.userName = :userName AND a.password = :password").setParameter("userName", userName).setParameter("password", passwd);
		System.out.println("Number of admins is/are : " + query.getResultList().size());
		verify = (query.getResultList().size() == 1) ? true : false;
//		verify = (passwd.equals(admin.getPassword()) && userName.equals(admin.getUserName())) ? true : false;
		if(verify){
			
		Administrator admin = (Administrator)query.getSingleResult(); 
			this.dispose();
			AdminMainView adminView = new AdminMainView();
			adminView.btnEnabled();
			adminView.setVisible(true);
		} else {
                   JOptionPane.showMessageDialog(AdminLogin.this,"Access Denied! Invalid Username or Password");
                   usernameTextBox.setText("");
                   passwordTextBox.setText("");
                   usernameTextBox.requestFocus();
               }
//            } catch (SQLException e) {
//                System.out.println(e.getMessage());
//            }
            
           // TODO add your handling code here:
        }

        
}//GEN-LAST:event_buttonLoginActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.dispose();
       // TODO add your handling code here:
}//GEN-LAST:event_buttonCancelActionPerformed

    private void passwordTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextBoxKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if(key == KeyEvent.VK_ENTER)
        {
        boolean verify = false;
        String user = usernameTextBox.getText();
        String passwd = passwordTextBox.getText();
        if (user.equals("") || passwd.equals("")){
            JOptionPane.showMessageDialog(AdminLogin.this,"Sorry! You must enter a Username and Password to login ");
            usernameTextBox.requestFocus();
        } else{
            Connection con = getConnection();
            try {
                ResultSet rows;
                Statement s = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                String select="Select * from admin;";
                rows = s.executeQuery(select);
                while(rows.next())
                {
                    String username=rows.getString("Username");
                    String password=rows.getString("Password");
                    if (user.equals(username) && passwd.equals(password))
                    {
                       verify = true;
                       this.dispose();
//                       btn.btnEnabled();
                       break;
                    }                     
                }
                if(verify == false)
                {
                    verify = false;
                    JOptionPane.showMessageDialog(AdminLogin.this,"Access Denied! Invalid Username or Password");
                    usernameTextBox.setText("");
                    passwordTextBox.setText("");
                    usernameTextBox.requestFocus();
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
            if(verify == false){
                JOptionPane.showMessageDialog(AdminLogin.this,"Access Denied!  Invalid Username or Password");
                usernameTextBox.setText("");
                passwordTextBox.setText("");
                usernameTextBox.requestFocus();
            }     // TODO add your handling code here:
        }
        }
         if (key == KeyEvent.VK_UP)
         {
             usernameTextBox.grabFocus();
         }
          if (key == KeyEvent.VK_KP_UP)
          {
             usernameTextBox.grabFocus();
          }
    }//GEN-LAST:event_passwordTextBoxKeyPressed

    private void usernameTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTextBoxKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if(key == KeyEvent.VK_ENTER)
        {
         boolean verify = false;
         String user = usernameTextBox.getText();
         String passwd = passwordTextBox.getText();

         if ( passwd.equals(""))
         {
            JOptionPane.showMessageDialog(AdminLogin.this,"Sorry! You must enter a Password to login ");
            usernameTextBox.requestFocus();
         }

        if (user.equals("")){
            JOptionPane.showMessageDialog(AdminLogin.this,"Sorry! You must enter a Username to login ");
            usernameTextBox.requestFocus();
        } else{
            Connection con = getConnection();
            try {
                ResultSet rows;
                Statement s = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                String select="Select * from admin;";
                rows=s.executeQuery(select);
                while (rows.next())
                {
                    String username=rows.getString("Username");
                    String password=rows.getString("Password");
                    if (user.equals(username) && passwd.equals(password))
                    {
                       verify = true;
                       this.dispose();
                        //JFrame frame1= new JFrame();
                       AdminMainView adminBtns = new AdminMainView();
                       adminBtns.btnEnabled();
                       break;
                   }                      
                }
                if(verify == false)
                {
                  verify = false;
                  usernameTextBox.setText("");
                  passwordTextBox.setText("");
                  usernameTextBox.requestFocus();
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
            if(verify == false)
            {
                JOptionPane.showMessageDialog(AdminLogin.this,"Access Denied!  Wrong Username or Password");
                usernameTextBox.setText("");
                passwordTextBox.setText("");
                usernameTextBox.requestFocus();
            }    
        }

        }
            if (key == KeyEvent.VK_DOWN)
            {
                passwordTextBox.grabFocus();
            }
    }//GEN-LAST:event_usernameTextBoxKeyPressed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
         this.dispose();
         //JFrame frame1= new JFrame();
         Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
         AccessControl accessControlForm = new AccessControl();
         accessControlForm.setLocation((screen.width - 400)/2,((screen.height-350)/2));
         accessControlForm.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
             
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel loginBannerLabel;
    private javax.swing.JLabel loginIconLabel;
    private javax.swing.JPasswordField passwordTextBox;
    private javax.swing.JTextField usernameTextBox;
    // End of variables declaration//GEN-END:variables

}
